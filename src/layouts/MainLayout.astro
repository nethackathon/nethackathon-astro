---
import Charity from "../components/Charity.astro";
import Logo from "../components/Logo.astro";
import MagicLamp from "../components/MagicLamp.astro";
import NavComponent from "../components/Nav.astro";
import SocialAndLogin from "../components/SocialAndLogin.astro";
import favicon from "../images/favicon.png";

const { currentPage } = Astro.props;
let response = await fetch(`${import.meta.env.NODE_API}/event/current`);
const { currentEvent } = await response.json();
response = await fetch(`${import.meta.env.NODE_API}/event/last`);
const { lastEvent } = await response.json();
---

<!doctype html>
<html lang="en" data-theme="dark">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width,initial-scale=1.0" />
    <link rel="icon" href={favicon.src} />
    <title>NetHackathon</title>
    <meta
      name="description"
      content="NetHackathon is an event where, twice a year, Twitch content creators stream NetHack continuously for 48 hours."
    />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://nethackathon.org/" />
    <meta property="og:title" content="NetHackathon" />
    <meta
      property="og:description"
      content="Twice a year, Twitch content creators stream NetHack continuously for over 48 hours!"
    />
    <meta property="og:image" content="https://nethackathon.org/favicon.png" />
  </head>
  <body>
    <header>
      <MagicLamp />
      {currentEvent.charity_name && <Charity currentEvent={currentEvent} />}
      <Logo />
      <SocialAndLogin />
      <NavComponent
        currentEvent={currentEvent}
        lastEvent={lastEvent}
        currentPage={currentPage}
      />
      <slot name="nav" />
    </header>
    <main>
      <slot />
    </main>
  </body>
</html>

<style is:global>
  :root {
    --color-dark: rgb(0, 0, 0);
    --color-dark-highlight: rgb(27, 27, 27);
    --color-light: rgb(255, 255, 255);
    --color-light-highlight: rgb(227, 227, 227);
    --color-a: rgb(235, 86, 79);
    --color-b: rgb(150, 149, 248);
    --color-c: rgb(234, 51, 247);
  }
  body {
    font-family: "DejaVu Sans Mono", "Menlo", sans-serif;
    font-size: 15pt;
  }
  h2 {
    font-size: 22pt;
  }
  a {
    color: var(--color-b);
    font-weight: bold;
  }
  header {
    display: grid;
    gap: 0.5em;
  }
  main {
    margin: 0 0 2em 0;
    display: grid;
    gap: 0.5em;
  }
  section {
    padding: 0 1em;
    border: 1px solid;
    border-radius: 3px;
    max-width: 100%;
    overflow-x: auto;
  }
  section a,
  section h2,
  section h3 {
    color: var(--color-b);
  }
  strong.a,
  section.a a,
  section.a h2,
  section.a h3 {
    color: var(--color-a);
  }
  strong.b,
  section.b a,
  section.b h2,
  section.b h3 {
    color: var(--color-b);
  }
  strong.c,
  section.c a,
  section.c h2,
  section.c h3 {
    color: var(--color-c);
  }
  @media (min-width: 1401px) {
    body {
      padding: 2em 20%;
    }
  }
  @media (max-width: 1400px) {
    body {
      padding: 0.5em 1em 1em 1em;
    }
  }
  @media (min-width: 960px) {
    main {
      grid-template-columns: 1fr 1fr;
    }
    section.double {
      grid-column: 1 / 3;
    }
    nav.sub {
      grid-column: 1 / 3;
    }
  }
  @media (max-width: 959px) {
    #nethackathon-logo {
      width: 80%;
      margin: 0 auto;
    }
    header {
      grid-template-columns: 1fr;
    }
    main {
      grid-template-columns: 1fr;
    }
  }
  :root,
  html[data-theme="dark"] {
    color: var(--color-light);
    background: var(--color-dark);
  }
  html[data-theme="dark"] section {
    border-color: var(--color-light);
  }
  html[data-theme="light"] {
    color: var(--color-dark);
    background: var(--color-light);
  }
  html[data-theme="light"] section {
    border-color: var(--color-dark);
  }
  .hidden {
    display: none !important;
  }

  html[data-theme="dark"] nav a:hover {
    background-color: var(--color-dark-highlight);
  }
  html[data-theme="light"] nav a:hover {
    background-color: var(--color-light-highlight);
  }

  nav {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    min-height: 48px;
  }
  nav a {
    line-height: 48px;
    height: 48px;
    font-size: 14pt;
    padding: 0 1em;
  }
  nav a.active {
    color: var(--color-a);
  }
</style>
